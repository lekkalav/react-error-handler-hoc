{"version":3,"file":"bundle.umd.js","sources":["../src/index.js"],"sourcesContent":["const React = require('react')\nconst curry = require('lodash.curry')\n\nfunction withErrorHandler (errorCallback, FallbackComponent, Component) {\n  class WithErrorHandler extends React.Component {\n    constructor () {\n      super()\n\n      this.state = {\n        hasError: false,\n        error: null,\n        errorInfo: null\n      }\n    }\n\n    componentDidCatch (error, info) {\n      this.setState({ hasError: true, error, errorInfo: info })\n\n      errorCallback(error, info, this.props)\n    }\n\n    render () {\n      if (this.state.hasError) {\n        const { error, errorInfo } = this.state\n        return (\n          <FallbackComponent\n            {...this.props}\n            error={error}\n            errorInfo={errorInfo}\n          />\n        )\n      }\n\n      return <Component {...this.props} />\n    }\n  }\n  WithErrorHandler.displayName = `withErrorHandler(${Component.displayName})`\n  return WithErrorHandler\n}\n\nmodule.exports = curry(withErrorHandler)\n"],"names":["React","require","curry","module","exports","errorCallback","FallbackComponent","Component","WithErrorHandler","state","error","info","setState","hasError","errorInfo","this","props","displayName"],"mappings":"gnCAAMA,EAAQC,QAAQ,SAChBC,EAAQD,QAAQ,gBAuCtBE,OAAOC,QAAUF,EArCjB,SAA2BG,EAAeC,EAAmBC,OACrDC,+GAIGC,iBACO,QACH,eACI,mBAPcT,EAAMO,wDAWhBG,EAAOC,QACnBC,UAAWC,UAAU,EAAMH,QAAOI,UAAWH,MAEpCD,EAAOC,EAAMI,KAAKC,2CAI5BD,KAAKN,MAAMI,SAAU,OACME,KAAKN,MAA1BC,IAAAA,MAAOI,IAAAA,iBAEbd,gBAACM,OACKS,KAAKC,aACFN,YACII,YAKVd,gBAACO,EAAcQ,KAAKC,yBAGdC,gCAAkCV,EAAUU,gBACtDT"}